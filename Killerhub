local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- UI setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ArceusHubPanel"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 320, 0, 150)
frame.Position = UDim2.new(0, 20, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(10, 20, 50) -- azul escuro
frame.BorderSizePixel = 0
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundTransparency = 1
title.Text = "Arceus Hub Panel"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = frame

local commandBox = Instance.new("TextBox")
commandBox.Size = UDim2.new(1, -20, 0, 35)
commandBox.Position = UDim2.new(0, 10, 0, 50)
commandBox.BackgroundColor3 = Color3.fromRGB(30, 40, 80)
commandBox.TextColor3 = Color3.new(1, 1, 1)
commandBox.PlaceholderText = "Digite um comando e pressione Enter"
commandBox.Font = Enum.Font.SourceSans
commandBox.TextSize = 18
commandBox.ClearTextOnFocus = false
commandBox.Parent = frame

local msgLabel = Instance.new("TextLabel")
msgLabel.Size = UDim2.new(1, -20, 0, 25)
msgLabel.Position = UDim2.new(0, 10, 0, 95)
msgLabel.BackgroundTransparency = 1
msgLabel.Text = ""
msgLabel.TextColor3 = Color3.fromRGB(200, 255, 200)
msgLabel.Font = Enum.Font.SourceSans
msgLabel.TextSize = 14
msgLabel.TextXAlignment = Enum.TextXAlignment.Left
msgLabel.Parent = frame

local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 25, 0, 25)
minimizeBtn.Position = UDim2.new(1, -30, 0, 5)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(20, 40, 80)
minimizeBtn.Text = "-"
minimizeBtn.TextColor3 = Color3.new(1, 1, 1)
minimizeBtn.Font = Enum.Font.SourceSansBold
minimizeBtn.TextSize = 18
minimizeBtn.Parent = frame

local ballButton = Instance.new("TextButton")
ballButton.Size = UDim2.new(0, 50, 0, 50)
ballButton.Position = UDim2.new(0, 20, 0.3, 0)
ballButton.BackgroundColor3 = Color3.fromRGB(20, 40, 80)
ballButton.Visible = false
ballButton.Parent = screenGui
ballButton.AutoButtonColor = true
ballButton.BorderSizePixel = 0

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(1, 0)
corner.Parent = ballButton

-- Dragging logic para frame e bolinha
local function makeDraggable(guiObject)
	local dragging
	local dragInput
	local dragStart
	local startPos

	guiObject.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = guiObject.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	guiObject.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	RunService.RenderStepped:Connect(function()
		if dragging and dragInput then
			local delta = dragInput.Position - dragStart
			guiObject.Position = UDim2.new(
				math.clamp(startPos.X.Scale, 0, 1),
				math.clamp(startPos.X.Offset + delta.X, 0, workspace.CurrentCamera.ViewportSize.X - guiObject.AbsoluteSize.X),
				math.clamp(startPos.Y.Scale, 0, 1),
				math.clamp(startPos.Y.Offset + delta.Y, 0, workspace.CurrentCamera.ViewportSize.Y - guiObject.AbsoluteSize.Y)
			)
		end
	end)
end

makeDraggable(frame)
makeDraggable(ballButton)

minimizeBtn.MouseButton1Click:Connect(function()
	frame.Visible = false
	ballButton.Visible = true
end)
ballButton.MouseButton1Click:Connect(function()
	frame.Visible = true
	ballButton.Visible = false
end)

-- Estados
local states = {
	infiniteJump = false,
	noclip = false,
	godmode = false,
	fly = false,
	speed = 16,
	jumpPower = 50,
	tpTool = false,
}

local humanoid, character, rootPart
local flyVelocity, flyConnection, godConn, noclipLoop, connJump, tpToolConnection

local function updateCharacter()
	character = player.Character
	if character then
		humanoid = character:FindFirstChildOfClass("Humanoid")
		rootPart = character:FindFirstChild("HumanoidRootPart")
		if humanoid then
			humanoid.JumpPower = states.jumpPower
			humanoid.WalkSpeed = states.speed
		end
	end
end
updateCharacter()
player.CharacterAdded:Connect(function()
	wait(0.5)
	updateCharacter()
	-- reaplica estados
	if states.infiniteJump then toggleInfiniteJump(true) end
	if states.noclip then toggleNoclip(true) end
	if states.godmode then toggleGodmode(true) end
	if states.fly then toggleFly(true) end
	if states.tpTool then toggleTpTool(true) end
	if humanoid then
		humanoid.WalkSpeed = states.speed
		humanoid.JumpPower = states.jumpPower
	end
end)

function toggleInfiniteJump(on)
	if on then
		if connJump then connJump:Disconnect() end
		connJump = UserInputService.JumpRequest:Connect(function()
			if humanoid and humanoid.Health > 0 then
				humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end
		end)
	else
		if connJump then connJump:Disconnect() connJump=nil end
	end
	states.infiniteJump = on
end

function toggleNoclip(on)
	if on then
		noclipLoop = RunService.Stepped:Connect(function()
			if character then
				for _, part in ipairs(character:GetDescendants()) do
					if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
						part.CanCollide = false
					end
				end
			end
		end)
	else
		if noclipLoop then noclipLoop:Disconnect() noclipLoop=nil end
		if character then
			for _, part in ipairs(character:GetDescendants()) do
				if part:IsA("BasePart") then
					part.CanCollide = true
				end
			end
		end
	end
	states.noclip = on
end

function toggleGodmode(on)
	if on and humanoid then
		humanoid.MaxHealth = math.huge
		humanoid.Health = humanoid.MaxHealth
		if godConn then godConn:Disconnect() end
		godConn = humanoid.HealthChanged:Connect(function()
			if humanoid.Health < 1 then
				humanoid.Health = humanoid.MaxHealth
			end
		end)
	else
		if godConn then godConn:Disconnect() godConn=nil end
		if humanoid then
			humanoid.MaxHealth = 100
			if humanoid.Health > 100 then humanoid.Health = 100 end
		end
	end
	states.godmode = on
end

function toggleFly(on)
	if on and rootPart then
		if flyConnection then flyConnection:Disconnect() flyConnection=nil end
		flyVelocity = Instance.new("BodyVelocity")
		flyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
		flyVelocity.Velocity = Vector3.new(0,0,0)
		flyVelocity.Parent = rootPart

		flyConnection = RunService.Heartbeat:Connect(function()
			local moveDir = Vector3.new(0,0,0)
			if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveDir = moveDir + workspace.CurrentCamera.CFrame.LookVector end
			if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveDir = moveDir - workspace.CurrentCamera.CFrame.LookVector end
			if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveDir = moveDir - workspace.CurrentCamera.CFrame.RightVector end
			if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveDir = moveDir + workspace.CurrentCamera.CFrame.RightVector end
			if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveDir = moveDir + Vector3.new(0,1,0) end
			if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then moveDir = moveDir - Vector3.new(0,1,0) end
			if moveDir.Magnitude > 0 then
				flyVelocity.Velocity = moveDir.Unit * 50
			else
				flyVelocity.Velocity = Vector3.new(0,0,0)
			end
		end)
	else
		if flyConnection then flyConnection:Disconnect() flyConnection=nil end
		if flyVelocity then flyVelocity:Destroy() flyVelocity=nil end
	end
	states.fly = on
end

function toggleTpTool(on)
	states.tpTool = on
	if on then
		tpToolConnection = mouse.Button1Down:Connect(function()
			if rootPart then
				local pos = mouse.Hit + Vector3.new(0,3,0)
				rootPart.CFrame = CFrame.new(pos.X, pos.Y, pos.Z)
			end
		end)
	else
		if tpToolConnection then tpToolConnection:Disconnect() tpToolConnection=nil end
	end
end

local function runCommand(cmd)
	local args = {}
	for word in cmd:lower():gmatch("%S+") do
		table.insert(args, word)
	end
	if #args == 0 then return end

	local command = args[1]

	if command == "infjump" or command == "infinitejump" then
		local newState = not states.infiniteJump
		toggleInfiniteJump(newState)
		return "InfiniteJump "..(newState and "ativado" or "desativado")

	elseif command == "noclip" then
		local newState = not states.noclip
		toggleNoclip(newState)
		return "Noclip "..(newState and "ativado" or "desativado")

	elseif command == "godmode" then
		local newState = not states.godmode
		toggleGodmode(newState)
		return "Godmode "..(newState and "ativado" or "desativado")

	elseif command == "fly" then
		local newState = not states.fly
		toggleFly(newState)
		return "Fly "..(newState and "ativado" or "desativado")

	elseif command == "tptool" then
		local newState = not states.tpTool
		toggleTpTool(newState)
		return "TP Tool "..(newState and "ativado" or "desativado")

	elseif command == "speed" then
		local speedVal = tonumber(args[2])
		if speedVal and speedVal > 0 and speedVal <= 500 then
			states.speed = speedVal
			if humanoid then humanoid.WalkSpeed = speedVal end
			return "Speed setado para "..speedVal
		else
			return "Valor inválido para speed (1-500)"
		end

	elseif command == "jump" then
		local jumpVal = tonumber(args[2])
		if jumpVal and jumpVal >= 50 and jumpVal <= 500 then
			states.jumpPower = jumpVal
			if humanoid then humanoid.JumpPower = jumpVal end
			return "JumpPower setado para "..jumpVal
		else
			return "Valor inválido para jump (50-500)"
		end

	elseif command == "tp" then
		if args[2] and args[3] and args[4] then
			local x,y,z = tonumber(args[2]), tonumber(args[3]), tonumber(args[4])
			if x and y and z and rootPart then
				rootPart.CFrame = CFrame.new(x,y,z)
				return string.format("Teleportado para (%.1f, %.1f, %.1f)", x,y,z)
			else
				return "Coordenadas inválidas para tp"
			end
		else
			return "Use: tp x y z"
		end

	elseif command == "help" then
		return [[
Comandos disponíveis:
infjump
noclip
godmode
fly
tptool
speed [1-500]
jump [50-500]
tp x y z
		]]

	else
		return "Comando não encontrado. Digite 'help'."
	end
end

commandBox.FocusLost:Connect(function(enterPressed)
	if enterPressed then
		local input = commandBox.Text
		local result = runCommand(input)
		msgLabel.Text = result or ""
	end
end)
